name: Go CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout 5m

  build-export-arm64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          platforms: linux/arm64,linux/arm/v7
          push: false
          tags: darkness4/raspberry-pi-temperature-exporter:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the oci compatible version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: |
          OCI_VERSION=$(echo ${GITHUB_REF#refs/*/} | sed 's/+/-/g')
          echo ::set-output name=VERSION::${OCI_VERSION}

      - name: Build and export
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:latest
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:${{ steps.get_version.outputs.VERSION }}
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:latest-arm64
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:arm64
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:${{ steps.get_version.outputs.VERSION }}-arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-export-armv7:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          platforms: linux/arm64,linux/arm/v7
          push: false
          tags: darkness4/raspberry-pi-temperature-exporter:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the oci compatible version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: |
          OCI_VERSION=$(echo ${GITHUB_REF#refs/*/} | sed 's/+/-/g')
          echo ::set-output name=VERSION::${OCI_VERSION}

      - name: Build and export
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: |
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:latest-armv7
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:armv7
            ghcr.io/darkness4/raspberry-pi-temperature-exporter:${{ steps.get_version.outputs.VERSION }}-armv7
          cache-from: type=gha
          cache-to: type=gha,mode=max
